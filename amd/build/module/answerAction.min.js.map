{"version":3,"sources":["../../src/module/answerAction.js"],"names":["isInitEventAddStep","currentId","initAction","saveInfo","initEventAddStep","params","getNumberStep","push","idLatex","stepNumber","formula","objectStep","JSON","parse","localStep","key","renderStep","then","item","initLatex","initEventChangeLatexStep","document","getElementById","children","length","addEventListener","event","preventDefault","id","textStepInfo","listSteps","getElementsByTagName","step","value","getStepInfoInput","stringify","textStepContainer","querySelectorAll","Templates","render","html","js","appendNodeContents","fail","error","window","console","formulaContainer","readOnly","Latex","showActions","container","dataString","dataset","answerAction","dataObject","append","createContainer","input","createElement","classList","add"],"mappings":"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","sourcesContent":["import Templates from 'core/templates';\nimport Latex from \"./Latex\";\n\nlet isInitEventAddStep = false;\nlet template = \"mod_latex/components/step-answer\";\nlet currentId = '';\n\nexport const initAction = (saveInfo) => {\n    initEventAddStep();\n\n    let params = [];\n\n    if (!saveInfo) {\n        currentId = `step-${getNumberStep()}`;\n        params.push({\n            idLatex: currentId,\n            stepNumber: getNumberStep(),\n            formula: ''\n        });\n    } else {\n        let objectStep = JSON.parse(saveInfo);\n        let localStep = 1;\n        for (let key in objectStep) {\n            currentId = key;\n            params.push({\n                idLatex: currentId,\n                stepNumber: localStep,\n                formula: objectStep[key]\n            });\n            localStep++;\n        }\n    }\n\n    renderStep(params).then(() => {\n        for (let item of params) {\n            initLatex(`#${item.idLatex}`, item.formula);\n            initEventChangeLatexStep(item.idLatex);\n        }\n        return null;\n    });\n};\n\nconst getNumberStep = () => {\n    return document.getElementById('container_steps').children.length + 1;\n};\n\nconst initEventAddStep = () => {\n    if (!isInitEventAddStep) {\n        isInitEventAddStep = true;\n        document.getElementById('add-step').addEventListener('click', (event) => {\n            event.preventDefault();\n            initAction();\n        });\n    }\n};\n\nconst initEventChangeLatexStep = (id) => {\n    let textStepInfo = {};\n    document.getElementById(id).addEventListener('change', () => {\n        let listSteps = document.getElementById('container_steps').getElementsByTagName('input');\n        for (let step of listSteps) {\n            if (step.value !== '') {\n                textStepInfo[step.id] = step.value;\n            }\n        }\n        getStepInfoInput().value = JSON.stringify(textStepInfo);\n    });\n};\n\nconst getStepInfoInput = () => {\n    let textStepContainer = document.querySelectorAll('[name=\"answeraction\"]');\n    return textStepContainer[0];\n};\n\nconst renderStep = (params) => {\n    return Templates.render(template, {params})\n        .then((html, js) => {\n            Templates.appendNodeContents(document.getElementById('container_steps'), html, js);\n        })\n        .fail(error => {\n            window.console.error(error);\n        });\n};\n\nconst initLatex = (formulaContainer, formula, readOnly) => {\n    new Latex({formulaContainer, formula, readOnly});\n};\n\n/**\n * @description Отображаем информация для хода решения\n */\nexport const showActions = () => {\n    let container = document.getElementById('answer-action-container');\n    if (container) {\n        let dataString = container.dataset.answerAction;\n        let dataObject = JSON.parse(dataString);\n        for (let item in dataObject) {\n            container.append(createContainer(item));\n            initLatex(`#${item}-submissions`, dataObject[item], true);\n        }\n    }\n};\n\nconst createContainer = (id) => {\n    let input = document.createElement('input');\n    input.id = `${id}-submissions`;\n    input.classList.add('d-none');\n    return input;\n};"],"file":"answerAction.min.js"}